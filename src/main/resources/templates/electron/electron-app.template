{!questions}
projectName=What is your project name?
basePackage=What is your base package name?
description=Project description:A desktop application using Electron
{end_questions}

{!file}package.json{end_file}
{
  "name": "{!basePackage}",
  "version": "1.0.0",
  "description": "{!description}",
  "main": "src/main.js",
  "scripts": {
    "start": "electron .",
    "dev": "electron . --debug",
    "build": "electron-builder",
    "test": "jest",
    "lint": "eslint .",
    "format": "prettier --write ."
  },
  "dependencies": {
    "electron-store": "^8.1.0"
  },
  "devDependencies": {
    "electron": "^28.1.0",
    "electron-builder": "^24.9.1",
    "jest": "^29.7.0",
    "eslint": "^8.56.0",
    "prettier": "^3.2.4"
  },
  "build": {
    "appId": "{!basePackage}",
    "productName": "{!projectName}",
    "directories": {
      "output": "dist"
    },
    "win": {
      "target": "nsis"
    },
    "mac": {
      "target": "dmg"
    },
    "linux": {
      "target": "AppImage"
    }
  }
}

{!file}src/main.js{end_file}
const { app, BrowserWindow, ipcMain } = require('electron');
const path = require('path');
const Store = require('electron-store');

const store = new Store();

function createWindow() {
  const mainWindow = new BrowserWindow({
    width: 1200,
    height: 800,
    webPreferences: {
      nodeIntegration: true,
      contextIsolation: false
    }
  });

  mainWindow.loadFile(path.join(__dirname, 'index.html'));

  // Open DevTools in development
  if (process.argv.includes('--debug')) {
    mainWindow.webContents.openDevTools();
  }
}

app.whenReady().then(createWindow);

app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') {
    app.quit();
  }
});

app.on('activate', () => {
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow();
  }
});

// IPC handlers
ipcMain.handle('get-store-value', (event, key) => {
  return store.get(key);
});

ipcMain.handle('set-store-value', (event, key, value) => {
  store.set(key, value);
95|}); 

{!file}index.html{end_file}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>{!projectName}</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <h1>Welcome to {!projectName}</h1>
        <div class="content">
            <p>{!description}</p>
            <div class="counter">
                <p>Counter: <span id="counter">0</span></p>
                <button id="increment">Increment</button>
            </div>
        </div>
    </div>
    <script src="renderer.js"></script>
</body>
</html>

{!file}renderer.js{end_file}
const { ipcRenderer } = require('electron');

let counter = 0;

// Initialize counter from store
ipcRenderer.invoke('get-store-value', 'counter').then(value => {
    if (value !== undefined) {
        counter = value;
        updateCounterDisplay();
    }
});

// Update counter display
function updateCounterDisplay() {
    document.getElementById('counter').textContent = counter;
}

// Handle increment button click
document.getElementById('increment').addEventListener('click', () => {
    counter++;
    updateCounterDisplay();
    // Save to store
    ipcRenderer.invoke('set-store-value', 'counter', counter);
});

{!file}styles.css{end_file}
body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
    margin: 0;
    padding: 20px;
    background-color: #f5f5f5;
}

.container {
    max-width: 800px;
    margin: 0 auto;
    background-color: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

h1 {
    color: #333;
    text-align: center;
    margin-bottom: 30px;
}

.content {
    text-align: center;
}

.counter {
    margin-top: 30px;
}

button {
    background-color: #4CAF50;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s;
}

button:hover {
    background-color: #45a049;
}

#counter {
    font-size: 24px;
    font-weight: bold;
    color: #333;
}
